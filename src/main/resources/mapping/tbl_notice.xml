<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.dao.NoticeMapper" >
    <resultMap id="BaseResultMap" type="com.yan.ssm.model.Notice" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="keywords" property="keywords" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="md5_status" property="md5Status" jdbcType="TINYINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.yan.ssm.model.Notice" extends="BaseResultMap" >
        <result column="content" property="content" jdbcType="LONGVARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, title, keywords, description, status, md5_status, create_time, modified_time
    </sql>
    <sql id="Blob_Column_List" >
        content
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from tbl_notice
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from tbl_notice
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.yan.ssm.model.Notice" >
        insert into tbl_notice (id, title, keywords,
        description, status, md5_status,
        create_time, modified_time, content
        )
        values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{keywords,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{md5Status,jdbcType=TINYINT},
        #{createTime,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
        )
    </insert>
   <!-- <insert id="insertSelective" parameterType="com.yan.ssm.model.Notice" >
        insert into tbl_notice
        <trim prefix="(" suffix=")" suffixOverridescription="," >
            <if test="id != null" >
                id,
            </if>
            <if test="title != null" >
                title,
            </if>
            <if test="keywords != null" >
                keywords,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="md5Status != null" >
                md5_status,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="modifiedTime != null" >
                modified_time,
            </if>
            <if test="content != null" >
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverridescription="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="title != null" >
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="keywords != null" >
                #{keywords,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=TINYINT},
            </if>
            <if test="md5Status != null" >
                #{md5Status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifiedTime != null" >
                #{modifiedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null" >
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>-->
    <update id="updateByPrimaryKeySelective" parameterType="com.yan.ssm.model.Notice" >
        update tbl_notice
        <set >
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="keywords != null" >
                keywords = #{keywords,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="md5Status != null" >
                md5_status = #{md5Status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifiedTime != null" >
                modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yan.ssm.model.Notice" >
        update tbl_notice
        set title = #{title,jdbcType=VARCHAR},
        keywords = #{keywords,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        status = #{status,jdbcType=TINYINT},
        md5_status = #{md5Status,jdbcType=TINYINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
        content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yan.ssm.model.Notice" >
    update tbl_notice
    set title = #{title,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      md5_status = #{md5Status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>